{"version":3,"sources":["components/ContactsList/ContactsList.module.css","components/Form/Form.module.css","components/Filter/Filter.module.css","components/ContactsList/ContactsList.js","components/Form/Form.js","components/Filter/Filter.js","views/ContactsView.js"],"names":["module","exports","ContactsList","dispatch","useDispatch","contacts","useSelector","contactsSelectors","getFilteredContacts","onDeleteContact","useCallback","id","contactsOperations","deleteContact","Paper","className","styles","contacts_list_wrapper","List","contacts_list","map","name","number","ListItem","ListItemAvatar","Avatar","ListItemText","primary","secondary","IconButton","edge","aria-label","onClick","Form","nameInputId","shortid","generate","numberInputId","useState","setName","setNumber","handleChange","e","currentTarget","value","console","warn","handleSubmit","preventDefault","find","contact","alert","addContact","reset","form","TextField","form_item","onChange","type","label","title","required","variant","Button","color","Filter","getFilter","changeFilter","target","search","searchIcon","InputBase","inputInput","placeholder","Contacts","useEffect","fetchContacts"],"mappings":"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","file":"static/js/5.f92e26b3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts_list_wrapper\":\"ContactsList_contacts_list_wrapper__3qRSK\",\"contacts_list\":\"ContactsList_contacts_list__yEbp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2qTuD\",\"form_item\":\"Form_form_item__LGeLE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Filter_search__2DZs9\",\"searchIcon\":\"Filter_searchIcon__1Xbpt\",\"inputInput\":\"Filter_inputInput__3Wa8n\"};","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport styles from './ContactsList.module.css';\nimport { Paper } from '@material-ui/core';\nimport { List } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport PhoneAndroid from '@material-ui/icons/PhoneAndroid';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nexport default function ContactsList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getFilteredContacts);\n\n  const onDeleteContact = useCallback(\n    id => {\n      dispatch(contactsOperations.deleteContact(id));\n    },\n    [dispatch],\n  );\n\n  return (\n    <Paper className={styles.contacts_list_wrapper}>\n      <List className={styles.contacts_list}>\n        {contacts.map(({ id, name, number }) => (\n          <ListItem key={id}>\n            <ListItemAvatar>\n              <Avatar>\n                <PhoneAndroid />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={name} secondary={number} />\n            <IconButton\n              edge=\"end\"\n              aria-label=\"delete\"\n              onClick={() => onDeleteContact(id)}\n            >\n              <DeleteIcon />\n            </IconButton>\n          </ListItem>\n        ))}\n      </List>\n    </Paper>\n  );\n}\n","import React, { useState, useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport shortid from 'shortid';\nimport styles from './Form.module.css';\nimport { Paper } from '@material-ui/core';\nimport { TextField } from '@material-ui/core';\nimport { Button } from '@material-ui/core';\n\nexport default function Form() {\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getFilteredContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = useCallback(e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        console.warn(`Тип поля ${name} не обрабатывается`);\n    }\n  }, []);\n\n  const handleSubmit = useCallback(\n    e => {\n      e.preventDefault();\n\n      contacts.find(contact => contact.name === name)\n        ? alert(`${name} is already in contacts`)\n        : contacts.find(contact => contact.number === number)\n        ? alert(`${number} is already in contacts`)\n        : dispatch(contactsOperations.addContact({ name, number }));\n\n      reset();\n    },\n    [contacts, dispatch, name, number],\n  );\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Paper className={styles.form}>\n      <TextField\n        className={styles.form_item}\n        onChange={handleChange}\n        value={name}\n        id={nameInputId}\n        name=\"name\"\n        type=\"text\"\n        label=\"Full Name\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        variant=\"outlined\"\n      />\n      <TextField\n        className={styles.form_item}\n        onChange={handleChange}\n        value={number}\n        id={numberInputId}\n        name=\"number\"\n        type=\"tel\"\n        label=\"Phone Number\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        variant=\"outlined\"\n      />\n      <Button\n        className={styles.form_item}\n        variant=\"contained\"\n        color=\"primary\"\n        type=\"submit\"\n        onClick={handleSubmit}\n      >\n        Add contact\n      </Button>\n    </Paper>\n  );\n}\n","import React, { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport styles from './Filter.module.css';\nimport shortid from 'shortid';\nimport { contactsSelectors, changeFilter } from '../../redux/contacts';\nimport InputBase from '@material-ui/core/InputBase';\nimport SearchIcon from '@material-ui/icons/Search';\n\nexport default function Filter() {\n  const nameInputId = shortid.generate();\n  const dispatch = useDispatch();\n  const value = useSelector(contactsSelectors.getFilter);\n\n  const onChange = useCallback(\n    e => {\n      dispatch(changeFilter(e.target.value));\n    },\n    [dispatch],\n  );\n\n  return (\n    <div className={styles.search}>\n      <div className={styles.searchIcon}>\n        <SearchIcon />\n      </div>\n      <InputBase\n        className={styles.inputInput}\n        color=\"secondary\"\n        placeholder=\"Search contacts...\"\n        id={nameInputId}\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ContactsList from '../components/ContactsList';\nimport Form from '../components/Form';\nimport Filter from '../components/Filter';\nimport { contactsOperations } from '../redux/contacts';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Form />\n      <div>\n        <Filter />\n        <ContactsList />\n      </div>\n    </>\n  );\n}\n"],"sourceRoot":""}